@page "/test"
@inject IJSRuntime jSRuntime
<style>
    .container {
        position: relative;
        width: 300px;
        height: 300px;
        border: 1px solid #000;
    }

    .circle {
        position: absolute;
        width: 50px;
        height: 50px;
        background-color: blue;
        border-radius: 50%;
    }
</style>

<h3>Drag the Circle</h3>

<div class="container" @onmousemove="OnMouseMove" @onmouseup="OnMouseUp">
    <div @ref="circle" class="circle" style="left: @dotXpx; top: @dotYpx;" @onmousedown="OnMouseDown"></div>
</div>

@code {
    bool isDragging = false;
    private double circleX = 0;
    private double circleY = 180;
    double offsetX = 0;
    double offsetY = 0;
    string dotXpx => $"{circleX}px";
    string dotYpx => $"{circleY}px";
    private ElementReference circle;

    void OnMouseDown(MouseEventArgs e)
    {
        isDragging = true;
        offsetX = e.ClientX - circleX;
        offsetY = e.ClientY - circleY;
    }

    void OnMouseMove(MouseEventArgs e)
    {
        if (isDragging)
        {
            circleX = e.ClientX - offsetX;
            circleY = e.ClientY - offsetY;
            jSRuntime.InvokeVoidAsync("updateCirclePosition", circle, circleX, circleY);
            StateHasChanged();
        }
    }

    void OnMouseUp()
    {
        isDragging = false;
    }
}
